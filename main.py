"""
POWERPUFF GIRLS GROUP - HERNANDEZ, MAGNO, MAURO, MENDOZA
"""
"""
import json
from web3 import Web3

# Connect to the blockchain (ganache rpc server)
rpcServer = input("RPC server: ")
web3 = Web3(Web3.HTTPProvider(rpcServer))
"""
"""
REMOVE THE """""" IF YOU WANT TO CHECK THE SERVER STATUS
# Check if connected to the blockchain
if web3.is_connected():
    print("Connected to the blockchain.")
else:
    print("Not connected to blockchain.")

# Check the block number
print(web3.eth.block_number)
"""

"""
MANUAL CHECKING FOR BALANCE
balance = web3.eth.get_balance('0x7fA9404532597166b89Db1AC9F204ac290677bE7')
balance = web3.from_wei(balance, 'ether')
print(balance)
"""

"""
# acc1 is the sender acc2 is the receiver; private_key is for acc1
# change acc1 and acc2 for an input, as well as private key
# when voting, change the acc1 address
"""
"""
account1 = "0x2911faCA1c010e1B0F7E8C71214374df1ABEe2FE"
"""
"""
account2 = "0xf68d4755C17A231654fBE2cB88Bba676238710Ba"

private_key = "0x93c6c76418fc1091cb2ca18e5c59304690da6a5502a081ff0eb5f57c2a471e36"

# get nonce
nonce = web3.eth.get_transaction_count(account1)

# build a tx
tx = {
    'nonce': nonce,
    'to': account2,
    'value': web3.to_wei(1, 'ether'),
    'gas': 2000000,
    'gasPrice': web3.to_wei('50', 'gwei')
}

# sign
signed_tx = web3.eth.account.sign_transaction(tx, private_key)

# send
tx_hash = web3.eth.send_raw_transaction(signed_tx.rawTransaction)

# tx hash
print(web3.to_hex(tx_hash))
"""
"""
web3.eth.default_account = account1

abi = json.loads('[{"inputs":[{"internalType":"string[]","name":"_candidateNames","type":"string[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"candidates","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_candidateIndex","type":"uint256"}],"name":"getCandidate","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCandidateCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_candidateIndex","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')
bytecode = '608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c57806330a56347146100785780633477ee2e1461009657806335b8e820146100c7578063a3ec138d146100f8575b600080fd5b610076600480360381019061007191906104fc565b610128565b005b610080610291565b60405161008d9190610651565b60405180910390f35b6100b060048036038101906100ab91906104fc565b61029e565b6040516100be9291906105e1565b60405180910390f35b6100e160048036038101906100dc91906104fc565b61035a565b6040516100ef9291906105e1565b60405180910390f35b610112600480360381019061010d91906104cf565b610485565b60405161011f91906105c6565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab90610611565b60405180910390fd5b60018054905081106101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f290610631565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001808281548110610267576102666107e9565b5b906000526020600020906002020160010160008282546102879190610688565b9250508190555050565b6000600180549050905090565b600181815481106102ae57600080fd5b90600052602060002090600202016000915090508060000180546102d190610759565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd90610759565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b5050505050908060010154905082565b6060600060018054905083106103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610631565b60405180910390fd5b600183815481106103b9576103b86107e9565b5b9060005260206000209060020201600001600184815481106103de576103dd6107e9565b5b9060005260206000209060020201600101548180546103fc90610759565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610759565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050915091509150915091565b60006020528060005260406000206000915054906101000a900460ff1681565b6000813590506104b481610880565b92915050565b6000813590506104c981610897565b92915050565b6000602082840312156104e5576104e4610818565b5b60006104f3848285016104a5565b91505092915050565b60006020828403121561051257610511610818565b5b6000610520848285016104ba565b91505092915050565b610532816106f0565b82525050565b60006105438261066c565b61054d8185610677565b935061055d818560208601610726565b6105668161081d565b840191505092915050565b600061057e600d83610677565b91506105898261082e565b602082019050919050565b60006105a1601783610677565b91506105ac82610857565b602082019050919050565b6105c08161071c565b82525050565b60006020820190506105db6000830184610529565b92915050565b600060408201905081810360008301526105fb8185610538565b905061060a60208301846105b7565b9392505050565b6000602082019050818103600083015261062a81610571565b9050919050565b6000602082019050818103600083015261064a81610594565b9050919050565b600060208201905061066660008301846105b7565b92915050565b600081519050919050565b600082825260208201905092915050565b60006106938261071c565b915061069e8361071c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106d3576106d261078b565b5b828201905092915050565b60006106e9826106fc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610744578082015181840152602081019050610729565b83811115610753576000848401525b50505050565b6000600282049050600182168061077157607f821691505b60208210811415610785576107846107ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b7f496e76616c69642063616e64696461746520696e646578000000000000000000600082015250565b610889816106de565b811461089457600080fd5b50565b6108a08161071c565b81146108ab57600080fd5b5056fea2646970667358221220b391e8af2ce2f92540161f3877bd770835f025ccadbce6f373e94cbae8480a1764736f6c63430008070033'
voting_address = web3.to_checksum_address("0xA4CaFd8CdBffEd451Df85C8eda1E2BB55A135afC")

contract = web3.eth.contract(address=voting_address, abi=abi)
"""

"""

# functions

# for voting
tx_hash = contract.functions.vote(0).transact()

web3.eth.wait_for_transaction_receipt(tx_hash)

print("Vote successful! Transaction hash:")
print(web3.to_hex(tx_hash))


"""
"""
candidate_count = contract.functions.getCandidateCount().call()
for i in range(candidate_count):
    # Call the getCandidate() function with the candidate index
    candidate_name, _ = contract.functions.getCandidate(i).call()
    print(f"Candidate {i + 1}: {candidate_name}")

# for getting all candidates
print(contract.functions.getCandidateCount().call())
"""
"""
# for getting candidate
print(contract.functions.getCandidate(1).call())
"""
"""

# for contract deployment

abi = json.loads('[{"inputs":[{"internalType":"string[]","name":"_candidateNames","type":"string[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"candidates","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_candidateIndex","type":"uint256"}],"name":"getCandidate","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCandidateCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_candidateIndex","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')
bytecode = '608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c57806330a56347146100785780633477ee2e1461009657806335b8e820146100c7578063a3ec138d146100f8575b600080fd5b610076600480360381019061007191906104fc565b610128565b005b610080610291565b60405161008d9190610651565b60405180910390f35b6100b060048036038101906100ab91906104fc565b61029e565b6040516100be9291906105e1565b60405180910390f35b6100e160048036038101906100dc91906104fc565b61035a565b6040516100ef9291906105e1565b60405180910390f35b610112600480360381019061010d91906104cf565b610485565b60405161011f91906105c6565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab90610611565b60405180910390fd5b60018054905081106101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f290610631565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001808281548110610267576102666107e9565b5b906000526020600020906002020160010160008282546102879190610688565b9250508190555050565b6000600180549050905090565b600181815481106102ae57600080fd5b90600052602060002090600202016000915090508060000180546102d190610759565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd90610759565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b5050505050908060010154905082565b6060600060018054905083106103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610631565b60405180910390fd5b600183815481106103b9576103b86107e9565b5b9060005260206000209060020201600001600184815481106103de576103dd6107e9565b5b9060005260206000209060020201600101548180546103fc90610759565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610759565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050915091509150915091565b60006020528060005260406000206000915054906101000a900460ff1681565b6000813590506104b481610880565b92915050565b6000813590506104c981610897565b92915050565b6000602082840312156104e5576104e4610818565b5b60006104f3848285016104a5565b91505092915050565b60006020828403121561051257610511610818565b5b6000610520848285016104ba565b91505092915050565b610532816106f0565b82525050565b60006105438261066c565b61054d8185610677565b935061055d818560208601610726565b6105668161081d565b840191505092915050565b600061057e600d83610677565b91506105898261082e565b602082019050919050565b60006105a1601783610677565b91506105ac82610857565b602082019050919050565b6105c08161071c565b82525050565b60006020820190506105db6000830184610529565b92915050565b600060408201905081810360008301526105fb8185610538565b905061060a60208301846105b7565b9392505050565b6000602082019050818103600083015261062a81610571565b9050919050565b6000602082019050818103600083015261064a81610594565b9050919050565b600060208201905061066660008301846105b7565b92915050565b600081519050919050565b600082825260208201905092915050565b60006106938261071c565b915061069e8361071c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106d3576106d261078b565b5b828201905092915050565b60006106e9826106fc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610744578082015181840152602081019050610729565b83811115610753576000848401525b50505050565b6000600282049050600182168061077157607f821691505b60208210811415610785576107846107ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b7f496e76616c69642063616e64696461746520696e646578000000000000000000600082015250565b610889816106de565b811461089457600080fd5b50565b6108a08161071c565b81146108ab57600080fd5b5056fea2646970667358221220b391e8af2ce2f92540161f3877bd770835f025ccadbce6f373e94cbae8480a1764736f6c63430008070033'
"""
